module Userplex
  module Models
    type pet_find_by_status_params =
      { status: Userplex::Models::PetFindByStatusParams::status }
      & Userplex::Internal::Type::request_parameters

    class PetFindByStatusParams < Userplex::Internal::Type::BaseModel
      extend Userplex::Internal::Type::RequestParameters::Converter
      include Userplex::Internal::Type::RequestParameters

      attr_reader status: Userplex::Models::PetFindByStatusParams::status?

      def status=: (
        Userplex::Models::PetFindByStatusParams::status
      ) -> Userplex::Models::PetFindByStatusParams::status

      def initialize: (
        ?status: Userplex::Models::PetFindByStatusParams::status,
        ?request_options: Userplex::request_opts
      ) -> void

      def to_hash: -> {
        status: Userplex::Models::PetFindByStatusParams::status,
        request_options: Userplex::RequestOptions
      }

      type status = :available | :pending | :sold

      module Status
        extend Userplex::Internal::Type::Enum

        AVAILABLE: :available
        PENDING: :pending
        SOLD: :sold

        def self?.values: -> ::Array[Userplex::Models::PetFindByStatusParams::status]
      end
    end
  end
end
