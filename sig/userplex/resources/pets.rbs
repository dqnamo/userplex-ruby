module Userplex
  module Resources
    class Pets
      def create: (
        name: String,
        photo_urls: ::Array[String],
        ?id: Integer,
        ?category: Userplex::Category,
        ?status: Userplex::Models::Pet::status,
        ?tags: ::Array[Userplex::Pet::Tag],
        ?request_options: Userplex::request_opts
      ) -> Userplex::Pet

      def retrieve: (
        Integer pet_id,
        ?request_options: Userplex::request_opts
      ) -> Userplex::Pet

      def update: (
        name: String,
        photo_urls: ::Array[String],
        ?id: Integer,
        ?category: Userplex::Category,
        ?status: Userplex::Models::Pet::status,
        ?tags: ::Array[Userplex::Pet::Tag],
        ?request_options: Userplex::request_opts
      ) -> Userplex::Pet

      def delete: (
        Integer pet_id,
        ?request_options: Userplex::request_opts
      ) -> nil

      def find_by_status: (
        ?status: Userplex::Models::PetFindByStatusParams::status,
        ?request_options: Userplex::request_opts
      ) -> Userplex::Models::pet_find_by_status_response

      def find_by_tags: (
        ?tags: ::Array[String],
        ?request_options: Userplex::request_opts
      ) -> Userplex::Models::pet_find_by_tags_response

      def update_by_id: (
        Integer pet_id,
        ?name: String,
        ?status: String,
        ?request_options: Userplex::request_opts
      ) -> nil

      def upload_image: (
        Integer pet_id,
        image: Userplex::Internal::file_input,
        ?additional_metadata: String,
        ?request_options: Userplex::request_opts
      ) -> Userplex::Models::PetUploadImageResponse

      def initialize: (client: Userplex::Client) -> void
    end
  end
end
